name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  shooter_list_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: 'stable'

      - name: Get Dart packages
        run: dart pub get

      - name: Run shooter-list parser unit tests
        run: dart test test/shooter_list_text_parser_test.dart -r expanded

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Set up Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: 'stable'

      - name: Install system deps (poppler-utils for pdftotext)
        run: sudo apt-get update && sudo apt-get install -y poppler-utils

      - name: Install Node deps for pdf.js extractor
        working-directory: scripts
        run: npm ci

      - name: Get Dart packages
        run: dart pub get

      - name: Run regression parity test
        run: dart test test/regression_field_parity_test.dart -r expanded

      - name: Run full test suite
        run: dart test -r expanded

      - name: Run tests with coverage
        run: dart test --coverage=coverage

      - name: Activate coverage formatter
        run: dart pub global activate coverage

      - name: Convert VM coverage to LCOV
        run: |
          # format_coverage lives in the coverage package
          dart pub global run coverage:format_coverage \
            --lcov \
            --in=coverage \
            --out=coverage/lcov.info \
            --packages=.packages \
            --report-on=lib

      - name: Install lcov (genhtml)
        run: sudo apt-get update && sudo apt-get install -y lcov

      - name: Filter LCOV for defensive lines
        run: ./scripts/filter_lcov.sh coverage/lcov.info coverage/lcov.filtered.info

      - name: Generate HTML coverage (filtered)
        run: genhtml -o coverage/html_filtered coverage/lcov.filtered.info

      - name: Upload coverage HTML artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: coverage/html_filtered

  flutter_example:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: flutter-actions/setup-flutter@v2
        with:
          flutter-version: 'stable'

      - name: Show Flutter info
        run: flutter --version

      - name: Get example packages
        run: flutter pub get
        working-directory: web_app

      - name: Flutter analyze (example)
        run: flutter analyze
        working-directory: web_app

      - name: Flutter test (example)
        run: flutter test
        working-directory: web_app

  deploy_web:
    runs-on: ubuntu-latest
    needs: flutter_example
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: flutter-actions/setup-flutter@v2
        with:
          channel: 'stable'

      - name: Show Flutter info
        run: flutter --version

      - name: Build Flutter web (example)
        run: flutter build web --release
        working-directory: web_app

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}'
          projectId: 'ess-pdf-processor'
